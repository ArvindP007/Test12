// <auto-generated />
using Credentials_Module.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace final_code.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    [Migration("20221014100534_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("new_2nd_Task.EFCore.CredentialsInfoTable", b =>
                {
                    b.Property<int>("credentialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("credentialId"), 1L, 1);

                    b.Property<string>("credentialName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("credentialValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("credentialId");

                    b.ToTable("CredentialsInfo");
                });

            modelBuilder.Entity("new_2nd_Task.EFCore.UserCredentials", b =>
                {
                    b.Property<int>("credentialId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("credentialId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCredentials");
                });

            modelBuilder.Entity("new_2nd_Task.EFCore.Usertable", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<int>("Password")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Usertable");
                });

            modelBuilder.Entity("new_2nd_Task.EFCore.UserCredentials", b =>
                {
                    b.HasOne("new_2nd_Task.EFCore.Usertable", "Usertable")
                        .WithMany("UserCredentials")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("new_2nd_Task.EFCore.CredentialsInfoTable", "CredentialsInfoTable")
                        .WithMany("UserCredentials")
                        .HasForeignKey("credentialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CredentialsInfoTable");

                    b.Navigation("Usertable");
                });

            modelBuilder.Entity("new_2nd_Task.EFCore.CredentialsInfoTable", b =>
                {
                    b.Navigation("UserCredentials");
                });

            modelBuilder.Entity("new_2nd_Task.EFCore.Usertable", b =>
                {
                    b.Navigation("UserCredentials");
                });
#pragma warning restore 612, 618
        }
    }
}
